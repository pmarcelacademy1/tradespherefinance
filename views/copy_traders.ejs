<%- include('partials/dynaHeader')%>

<main class="app-py-1" style="height: 100vh;">
  <div class="fade-appear-done fade-enter-done">
    <div class="container">
      <h4>Copy Traders</h4>
      <a href="/copy_trades_ongoing/<%= user._id %>" class="btn blue">View Ongoing Copy Trades</a>
      <div class="container">
        <ul class="collection row">
          <% traders.forEach(trader => { %>
            <li class="collection-item" style="padding: 0px;">
              <div class="row app-py-1">
                <div class="col l2 s3 center" style="padding: 0px;">
                  <img src="<%= trader.image %>" class="circle" style="max-width: 70px; padding: 0px;">
                </div>
                <div class="col l7 s5">
                  <div class="app-list-link">
                    <p style="font-weight: bold;"><%= trader.name %></p>
                    <span><%= trader.winRate %>% Win Rate</span><br>
                    <span><%= trader.profitShare %>% Profit Share</span><br>
                  </div>
                </div>
                <div class="col l3 s4 center">
                  <button class="btn green buy-copy-trade" 
                          data-trader-name="<%= trader.name %>"
                          data-profit-share="<%= trader.profitShare %>"
                          data-win-rate="<%= trader.winRate %>">BUY</button>
                </div>
              </div>
            </li>
          <% }) %>
        </ul>
      </div>
    </div>

    <!-- Modal Structure -->
    <div id="copyTradeModal" class="modal">
      <div class="modal-content">
        <h4 id="modalTraderName"></h4>
        <form id="copyTradeForm">
          <div class="input-field">
            <select id="accountType" name="accountType" required>
              <option value="" disabled selected>Select Account Type</option>
              <% user.accountTypes.forEach(account => { %>
                <option value="<%= account.name %>"><%= account.name %> ($<%= account.minDeposit.toFixed(2) %>)</option>
              <% }) %>
            </select>
            <label>Account Type</label>
          </div>
          <div class="input-field">
            <input id="profitShare" type="number" readonly>
            <label for="profitShare">Profit Share (%)</label>
          </div>
          <div class="input-field">
            <input id="winRate" type="number" readonly>
            <label for="winRate">Win Rate (%)</label>
          </div>
          <div class="input-field">
            <input id="amount" type="number" name="amount" min="1" step="0.01" required>
            <label for="amount">Amount ($)</label>
          </div>
          <div class="input-field">
            <input id="duration" type="number" name="duration" min="1" step="1" required>
            <label for="duration">Duration (Days)</label>
          </div>
          <div>
            <p>Estimated Profit: $<span id="estimatedProfit">0.00</span></p>
          </div>
          <div id="formError" style="color: red; display: none;"></div>
          <input type="hidden" id="traderName" name="traderName">
          <button type="submit" class="btn green">Confirm Copy Trade</button>
          <button type="button" class="btn red modal-close">Cancel</button>
        </form>
      </div>
    </div>
  </div>
</main>

<style>
  /* Collection item (copy trade cards) */
  .collection-item {
    background-color: #fff;
    border: 1px solid #e0e0e0;
    margin-bottom: 10px;
    padding: 0px;
    border-radius: 2px;
  }
  .app-list-link p {
    margin: 5px 0;
    color: #333;
    font-size: 16px;
  }
  .app-list-link span {
    color: #555;
    font-size: 14px;
  }
  .buy-copy-trade {
    width: 100%;
    font-size: 14px;
  }

  /* Modal styling to match collection-item */
  .modal {
    max-width: 600px;
    background-color: #fff;
    border: 1px solid #e0e0e0;
    border-radius: 2px;
  }
  .modal-content {
    padding: 20px;
    color: #333;
  }
  .modal-content h4 {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 20px;
    color: #333;
  }
  .input-field label {
    color: #555;
    font-size: 14px;
  }
  .input-field input,
  .input-field select {
    color: #333;
    font-size: 16px;
    border-bottom: 1px solid #9e9e9e;
  }
  .input-field input[readonly] {
    border-bottom: 1px dotted #9e9e9e;
    color: #666;
  }
  .input-field p {
    color: #333;
    font-size: 16px;
  }
  #formError {
    font-size: 14px;
    margin-top: 10px;
  }
  .modal .btn {
    margin-right: 10px;
    font-size: 14px;
  }

  /* Ensure select dropdown text is visible */
  select {
    color: #333 !important;
  }
  select option {
    color: #333;
  }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
<script>
  $(document).ready(function () {
    // Initialize Materialize components
    $('select').formSelect();
    $('.modal').modal();

    // Trader data
    const userBalance = <%= user.accountTypes.find(acc => acc.name === 'Trading Account').minDeposit %>;

    // Handle BUY button click
    $('.buy-copy-trade').on('click', function () {
      if (userBalance <= 0) {
        window.location.href = '/deposit/<%= user._id %>';
        return;
      }

      // Populate modal
      const traderName = $(this).data('trader-name');
      const profitShare = $(this).data('profit-share');
      const winRate = $(this).data('win-rate');

      $('#modalTraderName').text(traderName);
      $('#traderName').val(traderName);
      $('#profitShare').val(profitShare);
      $('#winRate').val(winRate);
      $('#amount').val('');
      $('#duration').val('30'); // Default duration
      $('#estimatedProfit').text('0.00');
      $('#formError').hide();

      // Open modal
      $('#copyTradeModal').modal('open');
    });

    // Real-time profit calculation
    $('#amount, #duration').on('input', function () {
      const amount = parseFloat($('#amount').val()) || 0;
      const winRate = parseFloat($('#winRate').val()) / 100;
      const profitShare = parseFloat($('#profitShare').val()) / 100;
      const duration = parseInt($('#duration').val()) || 1;

      // Assume daily profit based on winRate and amount, adjusted for duration
      const dailyProfit = amount * (winRate * 0.01); // Simplified: 1% of winRate daily
      const totalProfit = dailyProfit * duration * (1 - profitShare);
      $('#estimatedProfit').text(totalProfit.toFixed(2));
    });

    // Form submission
    $('#copyTradeForm').on('submit', function (e) {
      e.preventDefault();
      $('#formError').hide();

      const formData = {
        traderName: $('#traderName').val(),
        profitShare: parseFloat($('#profitShare').val()),
        winRate: parseFloat($('#winRate').val()),
        amount: parseFloat($('#amount').val()),
        accountType: $('#accountType').val(),
        duration: parseInt($('#duration').val())
      };

      // Client-side validation
      if (!formData.accountType) {
        $('#formError').text('Please select an account type.').show();
        return;
      }
      if (!formData.amount || formData.amount <= 0) {
        $('#formError').text('Amount must be greater than 0.').show();
        return;
      }
      if (!formData.duration || formData.duration < 1) {
        $('#formError').text('Duration must be at least 1 day.').show();
        return;
      }

      // Check account balance
      const selectedAccount = <%- JSON.stringify(user.accountTypes) %>.find(acc => acc.name === formData.accountType);
      if (!selectedAccount || selectedAccount.minDeposit < formData.amount) {
        $('#formError').text('Insufficient balance in selected account.').show();
        return;
      }

      $.ajax({
        url: `/copy_trade/<%= user._id %>`,
        type: 'POST',
        data: formData,
        success: function (response) {
          if (response.success) {
            M.toast({ html: 'Copy trade created successfully!', classes: 'green' });
            $('#copyTradeModal').modal('close');
            setTimeout(() => {
              window.location.href = '/copy_trades_ongoing/<%= user._id %>';
            }, 1000);
          }
        },
        error: function (xhr) {
          let errorMsg = 'Failed to create copy trade.';
          if (xhr.responseJSON && xhr.responseJSON.error) {
            errorMsg = xhr.responseJSON.error;
          }
          $('#formError').text(errorMsg).show();
        }
      });
    });
  });
</script>

<%- include('partials/dynaFooter')%>