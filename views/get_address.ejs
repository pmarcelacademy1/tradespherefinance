<%- include('partials/dynaHeader') %>

<main class="app-py-1" style="height: 100vh;">
  <div class="fade-appear-done fade-enter-done">
    <section class="row center">
      <div class="col l4 s12 offset-l4">
        <h4 style="color:black;">Fund Your Account via <span id="paymentMethod">Cryptocurrency</span> Transfer</h4>
        <p style="color:black;"></p><h6 style="color:black;" id="depositAmount">$0.00 USD</h6><p></p>
        <ul>
          <li>Transfer <span id="depositAmountText">$0.00 USD</span> in the chosen cryptocurrency to the wallet address below to finalize your deposit.</li>
          <li>Upload proof of payment (screenshot of payment, accepted formats: PNG, JPG, JPEG).</li>
        </ul>

        <!-- Display Flash Messages -->
        <% if (messages.error) { %>
          <div style="background-color: #ffebee; color: #c62828; padding: 15px; margin-bottom: 20px; border-radius: 4px;">
            <%= messages.error %>
          </div>
        <% } %>
        <% if (messages.success) { %>
          <div style="background-color: #e8f5e9; color: #2e7d32; padding: 15px; margin-bottom: 20px; border-radius: 4px;">
            <%= messages.success %>
          </div>
        <% } %>

        <div class="card-panel">
          <!-- Consolidated Styles -->
          <style>
            .plugin-setting-list li { position: relative; padding-left: 30px; font-size: 16px; color: #000000; list-style-type: none; margin-bottom: 15px; }
            .plugin-setting-list li:before { content: ""; position: absolute; left: 0; width: 20px; height: 20px; background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-check' width='24' height='24' viewBox='0 0 24 24' stroke-width='2' stroke='%23ffffff' fill='none' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath stroke='none' d='M0 0h24v24H0z' fill='none'%3E%3C/path%3E%3Cpath d='M5 12l5 5l10 -10'%3E%3C/path%3E%3C/svg%3E"); background-size: 14px; background-repeat: no-repeat; background-position: center center; background-color: #3cb371; border-radius: 100%; }
            .kwt-file { max-width: 380px; margin: 0 auto; }
            .kwt-file__drop-area { position: relative; display: flex; align-items: center; width: 100%; padding: 25px; background-color: #ffffff; border-radius: 12px; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.07); transition: 0.3s; }
            .kwt-file__drop-area.is-active { background-color: #d1def0; }
            .kwt-file__choose-file { flex-shrink: 0; background-color: #1d3557; border-radius: 100%; margin-right: 10px; color: #ffffff; width: 48px; height: 48px; display: flex; align-items: center; justify-content: center; }
            .kwt-file__choose-file svg { width: 24px; height: 24px; display: block; }
            .kwt-file__msg { color: #1d3557; font-size: 16px; font-weight: 400; line-height: 1.4; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; }
            .kwt-file__input { position: absolute; left: 0; top: 0; height: 100%; width: 100%; cursor: pointer; opacity: 0; }
            .kwt-file__input:focus { outline: none; }
            .kwt-file__delete { display: none; position: absolute; right: 10px; width: 18px; height: 18px; cursor: pointer; }
            .kwt-file__delete:before { content: ""; position: absolute; left: 0; transition: 0.3s; top: 0; z-index: 1; width: 100%; height: 100%; background-size: cover; background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg fill='%231d3557' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 438.5 438.5'%3e%3cpath d='M417.7 75.7A8.9 8.9 0 00411 73H323l-20-47.7c-2.8-7-8-13-15.4-18S272.5 0 264.9 0h-91.3C166 0 158.5 2.5 151 7.4c-7.4 5-12.5 11-15.4 18l-20 47.7H27.4a9 9 0 00-6.6 2.6 9 9 0 00-2.5 6.5v18.3c0 2.7.8 4.8 2.5 6.6a8.9 8.9 0 006.6 2.5h27.4v271.8c0 15.8 4.5 29.3 13.4 40.4a40.2 40.2 0 0032.3 16.7H338c12.6 0 23.4-5.7 32.3-17.2a64.8 64.8 0 0013.4-41V109.6h27.4c2.7 0 4.9-.8 6.6-2.5a8.9 8.9 0 002.6-6.6V82.2a9 9 0 00-2.6-6.5zm-248.4-36a8 8 0 014.9-3.2h90.5a8 8 0 014.8 3.2L283.2 73H155.3l14-33.4zm177.9 340.6a32.4 32.4 0 01-6.2 19.3c-1.4 1.6-2.4 2.4-3 2.4H100.5c-.6 0-1.6-.8-3-2.4a32.5 32.5 0 01-6.1-19.3V109.6h255.8v270.7z'/%3e%3cpath d='M137 347.2h18.3c2.7 0 4.9-.9 6.6-2.6a9 9 0 002.5-6.6V173.6a9 9 0 00-2.5-6.6 8.9 8.9 0 00-6.6-2.6H137c-2.6 0-4.8.9-6.5 2.6a8.9 8.9 0 00-2.6 6.6V338c0 2.7.9 4.9 2.6 6.6a8.9 8.9 0 006.5 2.6zM210.1 347.2h18.3a8.9 8.9 0 009.1-9.1V173.5c0-2.7-.8-4.9-2.5-6.6a8.9 8.9 0 00-6.6-2.6h-18.3a8.9 8.9 0 00-9.1 9.1V338a8.9 8.9 0 009.1 9.1zM283.2 347.2h18.3c2.7 0 4.8-.9 6.6-2.6a9 9 0 002.5-6.6V173.6c0-2.7-.8-4.9-2.5-6.6a8.9 8.9 0 00-6.6-2.6h-18.3a9 0 00-6.6 2.6 8.9 8.9 0 00-2.5 6.6V338a9 0 002.5 6.6 9 0 006.6 2.6z'/%3e%3c/svg%3e"); }
            .kwt-file__delete:after { content: ""; position: absolute; opacity: 0; left: 50%; top: 50%; width: 100%; height: 100%; transform: translate(-50%, -50%) scale(0); background-color: #1d3557; border-radius: 50%; transition: 0.3s; }
            .kwt-file__delete:hover:after { transform: translate(-50%, -50%) scale(2.2); opacity: 0.1; }
            .newbtn { background-color: #1d3557; color: #ffffff; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer; font-size: 16px; margin-top: 10px; }
            .newbtn:hover { background-color: #2a4b7c; }
            .error-message { color: red; font-size: 14px; margin-top: 5px; display: none; }
          </style>

          <!-- Wallet Address Display -->
          <form>
            <div class="row">
              <div class="input-field undefined">
                <ul class="collection with-header">
                  <li class="collection-item">
                    <div>
                      <span id="walletAddress"></span>
                      <a id="copyBtn" class="secondary-content"><i class="material-icons">content_copy</i></a>
                    </div>
                  </li>
                </ul>
              </div>
            </div>
          </form>

          <!-- Deposit Form -->
          <form id="depositForm" enctype="multipart/form-data">
            <input type="hidden" name="amount" id="formDepositAmount">
            <input type="hidden" name="paymentMethod" id="formDepositType">
            <input type="hidden" name="account" id="formDepositedTo">
            <div class="input-field undefined">
              <div class="kwt-file">
                <div class="kwt-file__drop-area">
                  <span class="kwt-file__choose-file">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor">
                      <path d="M67.508 468.467c-58.005-58.013-58.016-151.92 0-209.943l225.011-225.04c44.643-44.645 117.279-44.645 161.92 0 44.743 44.749 44.753 117.186 0 161.944l-189.465 189.49c-31.41 31.413-82.518 31.412-113.926.001-31.479-31.482-31.49-82.453 0-113.944L311.51 110.491c4.687-4.687 12.286-4.687 16.972 0l16.967 16.971c4.685 4.686 4.685 12.283 0 16.969L184.983 304.917c-12.724 12.724-12.73 33.328 0 46.058 12.696 12.697 33.356 12.699 46.054-.001l189.465-189.489c25.987-25.989 25.994-68.06.001-94.056-25.931-25.934-68.119-25.932-94.049 0l-225.01 225.039c-39.249 39.252-39.258 102.795-.001 142.057 39.285 39.29 102.885 39.287 142.162-.028A739446.174 739446.174 0 0 1 439.497 238.49c4.686-4.687 12.282-4.684 16.969.004l16.967 16.971c4.685 4.686 4.689 12.279.004 16.965a755654.128 755654.128 0 0 0-195.881 195.996c-58.034 58.092-152.004 58.093-210.048.041z"></path>
                    </svg>
                  </span>
                  <input type="file" name="image" accept="image/png,image/jpeg,image/jpg" placeholder="Select Files" class="demo1 kwt-file__input" id="demo1">
                  <span class="kwt-file__msg">Select Files</span>
                  <div class="kwt-file__delete"></div>
                </div>
                <span class="error-message" id="imageError">Please upload a proof of payment image (PNG, JPG, or JPEG)</span>
              </div>
            </div>
            <div>
              <button type="submit" class="newbtn">Deposit</button>
            </div>
          </form>
        </div>
      </div>
    </section>
  </div>
</main>

<!-- File Upload Script -->
<script>
  (function ($) {
    var customDragandDrop = function (element) {
      // Add class without replacing the input
      $(element).addClass("kwt-file__input");

      // Create wrapper without duplicating the input
      const $wrapper = $(`
        <div class="kwt-file">
          <div class="kwt-file__drop-area">
            <span class="kwt-file__choose-file">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor">
                <path d="M67.508 468.467c-58.005-58.013-58.016-151.92 0-209.943l225.011-225.04c44.643-44.645 117.279-44.645 161.92 0 44.743 44.749 44.753 117.186 0 161.944l-189.465 189.49c-31.41 31.413-82.518 31.412-113.926.001-31.479-31.482-31.49-82.453 0-113.944L311.51 110.491c4.687-4.687 12.286-4.687 16.972 0l16.967 16.971c4.685 4.686 4.685 12.283 0 16.969L184.983 304.917c-12.724 12.724-12.73 33.328 0 46.058 12.696 12.697 33.356 12.699 46.054-.001l189.465-189.489c25.987-25.989 25.994-68.06.001-94.056-25.931-25.934-68.119-25.932-94.049 0l-225.01 225.039c-39.249 39.252-39.258 102.795-.001 142.057 39.285 39.29 102.885 39.287 142.162-.028A739446.174 739446.174 0 0 1 439.497 238.49c4.686-4.687 12.282-4.684 16.969.004l16.967 16.971c4.685 4.686 4.689 12.279.004 16.965a755654.128 755654.128 0 0 0-195.881 195.996c-58.034 58.092-152.004 58.093-210.048.041z"></path>
              </svg>
            </span>
            <span class="kwt-file__msg">${element.placeholder || "or drop files here"}</span>
            <div class="kwt-file__delete"></div>
          </div>
        </div>
      `);

      // Insert wrapper and move original input into it
      $(element).before($wrapper);
      $wrapper.find('.kwt-file__drop-area').prepend(element);

      const $kwtFile = $(element).closest(".kwt-file");

      $kwtFile.on("dragenter focus click", ".kwt-file__input", function (e) {
        $(this).closest(".kwt-file__drop-area").addClass("is-active");
      });

      $kwtFile.on("dragleave blur drop", ".kwt-file__input", function (e) {
        $(this).closest(".kwt-file__drop-area").removeClass("is-active");
      });

      $kwtFile.on("change", ".kwt-file__input", function (e) {
        const filesCount = this.files.length;
        const $textContainer = $(this).siblings(".kwt-file__msg");
        const $errorMessage = $("#imageError");
        console.log('File input changed:', { filesCount, files: this.files }); // Debug
        if (filesCount === 1) {
          const fileName = $(this).val().split("\\").pop();
          const file = this.files[0];
          const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];
          console.log('Selected file:', { name: file.name, type: file.type, size: file.size }); // Debug
          if (!allowedTypes.includes(file.type)) {
            $errorMessage.text('Please upload a PNG, JPG, or JPEG image').css('display', 'block');
            $(this).val(null);
            $textContainer.text('Select Files');
            return;
          }
          $textContainer.text(fileName).siblings(".kwt-file__delete").css("display", "block");
          $errorMessage.css('display', 'none');
        } else if (filesCount > 1) {
          $errorMessage.text('Please upload only one image').css('display', 'block');
          $(this).val(null);
          $textContainer.text('Select Files');
        } else {
          $textContainer.text('Select Files');
          $kwtFile.find(".kwt-file__delete").css("display", "none");
          $errorMessage.css('display', 'none');
        }
      });

      $kwtFile.on("click", ".kwt-file__delete", function (e) {
        const $deleteElement = $(this);
        $deleteElement.closest(".kwt-file").find(`.kwt-file__input`).val(null);
        $deleteElement.css("display", "none").siblings(`.kwt-file__msg`).text('Select Files');
        $("#imageError").css('display', 'none');
      });
    };

    $.fn.kwtFileUpload = function () {
      return this.each(function () {
        customDragandDrop(this);
      });
    };
  })(jQuery);

  jQuery(document).ready(function ($) {
    try {
      $(".demo1").kwtFileUpload();

      // Load and display deposit data
      const depositData = JSON.parse(localStorage.getItem('depositData')) || {};
      const paymentMethod = depositData.paymentMethod || 'Cryptocurrency';
      const amount = parseFloat(depositData.amount || 0).toFixed(2);
      const accountType = depositData.accountType || 'Account';

      $('#paymentMethod').text(paymentMethod);
      $('#depositAmount').text(`$${amount} USD`);
      $('#depositAmountText').text(`$${amount} USD`);
      $('#formDepositAmount').val(amount);
      $('#formDepositType').val(paymentMethod);
      $('#formDepositedTo').val(accountType);

      // Wallet addresses
      const walletAddresses = {
        BITCOIN: '<%= user.btc_add %>',
        ETHEREUM: '<%= user.eth_add %>',
        XRP: '<%= user.xrp_add %>',
        USDt: '<%= user.usdt_add %>',
        RUNE: '<%= user.rune_add %>',
        XLM: '<%= user.xlm_add %>',
        DOGE: '<%= user.doge_add %>',
        Solana: '<%= user.sol_add %>'
      };

      $('#walletAddress').text(walletAddresses[paymentMethod] || 'Unknown');

      // Copy to clipboard
      $('#copyBtn').on('click', () => {
        const text = $('#walletAddress').text();
        navigator.clipboard.writeText(text).then(() => {
          alert(`Copied ${paymentMethod} wallet address: ${text}`);
        });
      });

      // Client-side form submission with AJAX
      $('#depositForm').on('submit', function(e) {
        e.preventDefault(); // Prevent default form submission

        const fileInput = $('#demo1');
        const errorMessage = $('#imageError');
        const files = fileInput[0].files;
        console.log('Form submit attempted:', { filesCount: files.length, files }); // Debug
        console.log('File input state:', {
          id: fileInput.attr('id'),
          name: fileInput.attr('name'),
          value: fileInput.val(),
          files: files
        }); // Debug

        // Client-side validation
        if (!files || files.length === 0) {
          errorMessage.text('Please upload a proof of payment image (PNG, JPG, or JPEG)').css('display', 'block');
          console.log('Validation failed: No file selected');
          return;
        }
        if (files.length > 1) {
          errorMessage.text('Please upload only one image').css('display', 'block');
          console.log('Validation failed: Multiple files selected');
          return;
        }

        const file = files[0];
        const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];
        console.log('Selected file on submit:', { name: file.name, type: file.type, size: file.size }); // Debug
        if (!allowedTypes.includes(file.type)) {
          errorMessage.text('Please upload a PNG, JPG, or JPEG image').css('display', 'block');
          console.log('Validation failed: Invalid file type:', file.type);
          return;
        }

        errorMessage.css('display', 'none');
        console.log('Validation passed, submitting form via AJAX');

        // Prepare form data
        const formData = new FormData();
        formData.append('image', file);
        formData.append('amount', $('#formDepositAmount').val());
        formData.append('paymentMethod', $('#formDepositType').val());
        formData.append('account', $('#formDepositedTo').val());

        // AJAX submission
        $.ajax({
          url: '/deposit/<%= user._id %>',
          type: 'POST',
          data: formData,
          processData: false,
          contentType: false,
          success: function(response, textStatus, xhr) {
            console.log('Form submission successful:', xhr.status); // Debug
            // Clear localStorage
            localStorage.removeItem('depositData');
            console.log('localStorage.depositData cleared'); // Debug
            // Redirect to dashboard
            window.location.href = '/dashboard';
          },
          error: function(xhr, textStatus, errorThrown) {
            console.error('Form submission failed:', xhr.responseText, xhr.status); // Debug
            let errorMsg = 'An error occurred during form submission';
            if (xhr.responseJSON && xhr.responseJSON.error) {
              errorMsg = xhr.responseJSON.error;
            }
            errorMessage.text(errorMsg).css('display', 'block');
          }
        });
      });
    } catch (error) {
      console.error('Error in document.ready:', error);
      $('#imageError').text('An error occurred while initializing the form').css('display', 'block');
    }
  });
</script>
<%- include('partials/dynaFooter') %>